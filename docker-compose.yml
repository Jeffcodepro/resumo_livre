# docker-compose.yml
version: "3.9"

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-resumo_livre_production}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-resumo_livre_production}"]
      interval: 5s
      timeout: 5s
      retries: 10

  web:
    build: .
    depends_on:
      db:
        condition: service_healthy
    # Carrega variáveis do .env (SECRET_KEY_BASE, etc.)
    env_file: .env
    environment:
      # Caso DATABASE_URL não esteja no .env, montamos a partir das variáveis do Postgres
      DATABASE_URL: "postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-resumo_livre_production}"
      RAILS_ENV: ${RAILS_ENV:-production}
      RAILS_SERVE_STATIC_FILES: ${RAILS_SERVE_STATIC_FILES:-1}
      RAILS_LOG_TO_STDOUT: ${RAILS_LOG_TO_STDOUT:-1}
    ports:
      - "3001:3001" # host:container
    command: >
      bash -lc "bin/rails db:prepare &&
                bin/rails server -b 0.0.0.0 -p 3001"
    # Opcional: persista uploads do ActiveStorage
    volumes:
      - ./storage:/rails/storage

volumes:
  pgdata:
