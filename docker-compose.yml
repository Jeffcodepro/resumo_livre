services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-resumo_livre_production}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-resumo_livre_production}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - easypanel

  web:
    build: .
    mem_limit: 3g
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-resumo_livre_production}"
      RAILS_ENV: ${RAILS_ENV:-production}
      RAILS_SERVE_STATIC_FILES: ${RAILS_SERVE_STATIC_FILES:-1}
      RAILS_LOG_TO_STDOUT: ${RAILS_LOG_TO_STDOUT:-1}
    ports:
      - "3001:3001"
    command: >
      bash -lc "bin/rails server -b 0.0.0.0 -p 3001"
    volumes:
      - ./storage:/rails/storage
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.resumo-livre.rule=Host(`resumo-livre-resumo-livre.ld8jgk.easypanel.host`)"
      - "traefik.http.routers.resumo-livre.entrypoints=http,https"
      - "traefik.http.services.resumo-livre.loadbalancer.server.port=3001"
      - "traefik.http.services.resumo-livre.loadbalancer.server.scheme=http"
      - "traefik.http.routers.resumo-livre.tls.certresolver=letsencrypt"

    networks:
      - easypanel

volumes:
  pgdata:

networks:
  easypanel:
    external: true
